2022-09-08 21:41:55,908:[P:20436]:Rank[0/1] => collecting env info (might take some time)
2022-09-08 21:41:57,999:[P:20436]:Rank[0/1] 
PyTorch version: 1.7.1+cu110
Is debug build: False
CUDA used to build PyTorch: 11.0
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.3 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.16.3

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration: GPU 0: NVIDIA GeForce RTX 2080 Ti
Nvidia driver version: 510.47.03
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.0.5
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.22.3
[pip3] torch==1.7.1+cu110
[pip3] torchaudio==0.7.2
[pip3] torchvision==0.8.2+cu110
[conda] Could not collect
2022-09-08 21:41:57,999:[P:20436]:Rank[0/1] Namespace(cfg='experiments/mthv2/cvt/cvt-13-224x224.yaml', distributed=False, local_rank=0, num_gpus=1, opts=['TEST.MODEL_FILE', 'OUTPUT/mthv2/cvt-13-224x224/model_best.pth'], port=9000)
2022-09-08 21:41:58,000:[P:20436]:Rank[0/1] AMP:
  ENABLED: True
  MEMORY_FORMAT: nchw
AUG:
  COLOR_JITTER: [0.4, 0.4, 0.4, 0.1, 0.0]
  DROPBLOCK_BLOCK_SIZE: 7
  DROPBLOCK_KEEP_PROB: 1.0
  DROPBLOCK_LAYERS: [3, 4]
  GAUSSIAN_BLUR: 0.0
  GRAY_SCALE: 0.0
  INTERPOLATION: 2
  MIXCUT: 1.0
  MIXCUT_AND_MIXUP: False
  MIXCUT_MINMAX: []
  MIXUP: 0.8
  MIXUP_MODE: batch
  MIXUP_PROB: 1.0
  MIXUP_SWITCH_PROB: 0.5
  RATIO: (0.75, 1.3333333333333333)
  SCALE: (0.08, 1.0)
  TIMM_AUG:
    AUTO_AUGMENT: rand-m9-mstd0.5-inc1
    COLOR_JITTER: 0.4
    HFLIP: 0.5
    INTERPOLATION: bicubic
    RE_COUNT: 1
    RE_MODE: pixel
    RE_PROB: 0.25
    RE_SPLIT: False
    USE_LOADER: False
    USE_TRANSFORM: False
    VFLIP: 0.0
BASE: ['']
CUDNN:
  BENCHMARK: True
  DETERMINISTIC: False
  ENABLED: True
DATASET:
  DATASET: mthv2
  DATA_FORMAT: jpg
  LABELMAP: 
  ROOT: DATASET/mthv2/
  SAMPLER: default
  TARGET_SIZE: -1
  TEST_SET: test
  TEST_TSV_LIST: []
  TRAIN_SET: train
  TRAIN_TSV_LIST: []
DATA_DIR: 
DEBUG:
  DEBUG: False
DIST_BACKEND: nccl
FINETUNE:
  BASE_LR: 0.003
  BATCH_SIZE: 256
  EVAL_EVERY: 3000
  FINETUNE: False
  FROZEN_LAYERS: []
  LR_SCHEDULER:
    DECAY_TYPE: step
  TRAIN_MODE: True
  USE_TRAIN_AUG: False
GPUS: (0,)
INPUT:
  MEAN: [0.485, 0.456, 0.406]
  STD: [0.229, 0.224, 0.225]
LOSS:
  LABEL_SMOOTHING: 0.1
  LOSS: softmax
MODEL:
  INIT_WEIGHTS: True
  NAME: cls_cvt
  NUM_CLASSES: 6065
  PRETRAINED: 
  PRETRAINED_LAYERS: ['*']
  SPEC:
    ATTN_DROP_RATE: [0.0, 0.0, 0.0]
    CLS_TOKEN: [False, False, True]
    DEPTH: [1, 2, 10]
    DIM_EMBED: [64, 192, 384]
    DROP_PATH_RATE: [0.0, 0.0, 0.1]
    DROP_RATE: [0.0, 0.0, 0.0]
    INIT: trunc_norm
    KERNEL_QKV: [3, 3, 3]
    MLP_RATIO: [4.0, 4.0, 4.0]
    NUM_HEADS: [1, 3, 6]
    NUM_STAGES: 3
    PADDING_KV: [1, 1, 1]
    PADDING_Q: [1, 1, 1]
    PATCH_PADDING: [2, 1, 1]
    PATCH_SIZE: [7, 3, 3]
    PATCH_STRIDE: [4, 2, 2]
    POS_EMBED: [False, False, False]
    QKV_BIAS: [True, True, True]
    QKV_PROJ_METHOD: ['dw_bn', 'dw_bn', 'dw_bn']
    STRIDE_KV: [2, 2, 2]
    STRIDE_Q: [1, 1, 1]
MODEL_SUMMARY: False
MULTIPROCESSING_DISTRIBUTED: True
NAME: cvt-13-224x224
OUTPUT_DIR: OUTPUT/
PIN_MEMORY: True
PRINT_FREQ: 500
RANK: 0
TEST:
  BATCH_SIZE_PER_GPU: 256
  CENTER_CROP: True
  IMAGE_SIZE: [224, 224]
  INTERPOLATION: 3
  MODEL_FILE: OUTPUT/mthv2/cvt-13-224x224/model_best.pth
  REAL_LABELS: False
  VALID_LABELS: 
TRAIN:
  AUTO_RESUME: True
  BATCH_SIZE_PER_GPU: 64
  BEGIN_EPOCH: 0
  CHECKPOINT: 
  CLIP_GRAD_NORM: 0.0
  DETECT_ANOMALY: False
  END_EPOCH: 300
  EVAL_BEGIN_EPOCH: 0
  GAMMA1: 0.99
  GAMMA2: 0.0
  IMAGE_SIZE: [224, 224]
  LR: 0.00025
  LR_SCHEDULER:
    ARGS:
      cooldown_epochs: 10
      decay_rate: 0.1
      epochs: 300
      min_lr: 1e-05
      sched: cosine
      warmup_epochs: 5
      warmup_lr: 1e-06
    METHOD: timm
  MOMENTUM: 0.9
  NESTEROV: True
  OPTIMIZER: adamW
  OPTIMIZER_ARGS:
    
  SAVE_ALL_MODELS: False
  SCALE_LR: True
  SHUFFLE: True
  WD: 0.05
  WITHOUT_WD_LIST: ['bn', 'bias', 'ln']
VERBOSE: True
WORKERS: 6
2022-09-08 21:41:58,002:[P:20436]:Rank[0/1] => using 1 GPUs
2022-09-08 21:41:58,002:[P:20436]:Rank[0/1] => saving config into: OUTPUT/mthv2/cvt-13-224x224/config.yaml
2022-09-08 21:41:58,011:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,012:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,012:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,012:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,012:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,013:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,013:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,013:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,013:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,014:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,014:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,015:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,032:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,034:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,034:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,036:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,036:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,038:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,038:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,039:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,039:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,043:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,043:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,045:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,046:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,047:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,048:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,049:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,049:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,050:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,050:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,052:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,052:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,053:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,053:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,055:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,288:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,290:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,290:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,292:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,292:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,293:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,293:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,295:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,295:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,300:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,301:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,306:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,306:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,308:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,308:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,309:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,309:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,311:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,311:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,313:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,313:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,320:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,320:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,326:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,326:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,328:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,328:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,330:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,330:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,331:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,332:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,333:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,333:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,339:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,339:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,345:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,345:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,347:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,347:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,348:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,349:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,350:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,350:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,352:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,352:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,423:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,423:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,428:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,428:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,430:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,430:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,432:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,432:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,433:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,433:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,435:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,435:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,440:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,441:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,446:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,446:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,448:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,448:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,449:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,449:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,458:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,458:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,460:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,460:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,527:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,527:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,534:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,534:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,536:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,536:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,538:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,538:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,540:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,540:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,541:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,542:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,547:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,547:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,552:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,552:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,554:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,554:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,563:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,563:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,564:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,565:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,566:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,623:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,629:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,629:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,636:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,636:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,638:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,638:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,640:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,640:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,641:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,641:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,643:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,643:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,648:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,648:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,654:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,654:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,655:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,656:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,657:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,657:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,723:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,723:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,725:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,725:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,732:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:41:58,732:[P:20436]:Rank[0/1] => init weight of Linear from trunc norm
2022-09-08 21:41:58,740:[P:20436]:Rank[0/1] => init bias of Linear to zeros
2022-09-08 21:42:02,370:[P:20436]:Rank[0/1] => load model file: OUTPUT/mthv2/cvt-13-224x224/model_best.pth
2022-09-08 21:42:02,522:[P:20436]:Rank[0/1] => ConvolutionalVisionTransformer(
  (stage0): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(2, 2))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=64, out_features=64, bias=True)
          (proj_k): Linear(in_features=64, out_features=64, bias=True)
          (proj_v): Linear(in_features=64, out_features=64, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage1): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(64, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage2): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(192, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.011)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.022)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.044)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.056)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (6): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (7): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.078)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (8): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.089)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (9): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
  (head): Linear(in_features=384, out_features=6065, bias=True)
)
2022-09-08 21:42:02,526:[P:20436]:Rank[0/1] Trainable Model Total Parameter: 	21.9M
2022-09-08 21:42:03,593:[P:20436]:Rank[0/1] => start testing
2022-09-08 21:42:03,593:[P:20436]:Rank[0/1] => switch to eval mode
2022-09-08 21:46:54,672:[P:20436]:Rank[0/1] => synchronize...
2022-09-08 21:46:54,673:[P:20436]:Rank[0/1] => TEST:	Loss 0.4090	Error@1 2.722%	Error@5 1.177%	Accuracy@1 97.278%	Accuracy@5 98.823%	
2022-09-08 21:46:55,146:[P:20436]:Rank[0/1] precision_micro 0.9727825460085148	precision_macro 0.8986273061603421	precision_weigh 0.9723779863707276	recall_micro 0.9727825460085148	recall_macro 0.8885461844634405	recall_weigh 0.9727825460085148	f1_micro 0.9727825460085148	f1_macro 0.8859477868518905	f1_weigh 0.9713999854631852	
2022-09-08 21:46:55,147:[P:20436]:Rank[0/1] => switch to train mode
2022-09-08 21:46:55,149:[P:20436]:Rank[0/1] => test duration time: 291.56s
2022-09-08 21:46:55,150:[P:20436]:Rank[0/1] => finish testing
